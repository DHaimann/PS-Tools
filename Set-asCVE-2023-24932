# Idea and most of code by Gary Blok
# https://github.com/gwblok/garytown/blob/master/ConfigMgr/Baselines/CVE-2023-24932/KB5025885-PSDetectionScript_Step1-2.ps1
# https://garytown.com/powershell-script-kb5025885-how-to-manage-the-windows-boot-manager-revocations-for-secure-boot-changes-associated-with-cve-2023-24932
# A little bit reworked by Dietmar Haimann to meet our needs
# You can use this script within ConfigMgr CI for detection and remediation until it returns "Remediation completed"

# Check Windows Version
$CurrentOSInfo = Get-Item -Path 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion'
$Build = $CurrentOSInfo.GetValue('CurrentBuild')
[int]$UBR = $CurrentOSInfo.GetValue('UBR')
 
# July 2024 UBRs
$JulyPatch = @('19044.4651','19045.4651','22631.3880','22621.3880','22000.3079')
$MatchedPatch = $JulyPatch | Where-Object {$_ -match $Build}
[int]$MatchedUBR = $MatchedPatch.split(".")[1]
 
If ($UBR -ge $MatchedUBR) {
    $OSSupported = $True
} Else {
    $OSSupported = $False
}
 
If ($OSSupported -eq $True) {
    $SecureBootRegPath = 'HKLM:\SYSTEM\CurrentControlSet\Control\SecureBoot'
    $RemediationsRegPath = 'HKLM:\SOFTWARE\LandOOE\Remediations\KB5025885'
    If (!(Test-Path -Path $RemediationsRegPath)) {
        New-Item -Path $RemediationsRegPath -Force -ItemType Directory | Out-Null
        New-ItemProperty -Path $RemediationsRegPath -Name "Step1Set" -PropertyType DWord -Value 0 -Force | Out-Null
        New-ItemProperty -Path $RemediationsRegPath -Name "Step1Success" -PropertyType DWord -Value 0 -Force | Out-Null
        New-ItemProperty -Path $RemediationsRegPath -Name "Step2Set" -PropertyType DWord -Value 0 -Force | Out-Null
        New-ItemProperty -Path $RemediationsRegPath -Name "Step2Success" -PropertyType DWord -Value 0 -Force | Out-Null
    }
 
 
    ## Start Region Detection
 
    # Start Get Step 1
    [bool]$Step1Complete = [System.Text.Encoding]::ASCII.GetString((Get-SecureBootUEFI db).bytes) -match 'Windows UEFI CA 2023'
    # Stop Get Step 1
     
    # Start Get Step 2
    $Parameters = (
        "s:",
        "/S"
    )
 
    $Process = Start-Process -FilePath mountvol -ArgumentList $Parameters -WindowStyle Hidden -Wait
 
    $FilePath = "S:\EFI\Microsoft\Boot\bootmgfw.efi"
    $CertCollection = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2Collection
    $CertCollection.Import($FilePath, $null, 'DefaultKeySet')
 
    If ($CertCollection.Subject -like "*Windows UEFI CA 2023*") {
        $Step2Complete = $true
    } Else {
        $Step2Complete = $false
    }
    # Stop Get Step 2
 
    ## End Region Detection
 
 
    ## Start Region Remediation
 
    # Start Step 1 Remediation   
    If ($Step1Complete -eq $True -and $Step2Complete -eq $True) {
        Write-Output "Remediation completed"  
    } Else {
        If ($Step1Complete -ne $True) {
            $Step1Set = Get-ItemPropertyValue -Path $RemediationsRegPath -Name "Step1Set"
            If ($Step1Set -ne 1) {
                New-ItemProperty -Path $SecureBootRegPath -Name "AvailableUpdates" -PropertyType DWord -Value 0x40 -Force | Out-Null
                New-ItemProperty -Path $RemediationsRegPath -Name "Step1Set" -PropertyType DWord -Value 1 -Force | Out-Null
            }
        }
        If ($Step1Complete -eq $True) { New-ItemProperty -Path $RemediationsRegPath -Name "Step1Success" -PropertyType DWord -Value 1 -Force | Out-Null }
    }
    # Stop Step 1 Remediation
  
    # Start Step 2 Remediation
    If ($Step1Complete -eq $True -and $Step2Complete -ne $True) {
        $Step2Set = Get-ItemPropertyValue -Path $RemediationsRegPath -Name "Step2Set"
        If ($Step2Set -ne 1) {
            New-ItemProperty -Path $SecureBootRegPath -Name "AvailableUpdates" -PropertyType DWord -Value 0x100 -Force | Out-Null
            New-ItemProperty -Path $RemediationsRegPath -Name "Step2Set" -PropertyType DWord -Value 1 -Force | Out-Null
        }    
        If ($Step2Complete -eq $True) { New-ItemProperty -Path $RemediationsRegPath -Name "Step2Success" -PropertyType DWord -Value 1 -Force | Out-Null }
    }
    # Stop Step 2 Remediation
     
    ## Stop Region Remediation 
} Else {
    Write-Output "The OS is not supported for this remediation."
}
